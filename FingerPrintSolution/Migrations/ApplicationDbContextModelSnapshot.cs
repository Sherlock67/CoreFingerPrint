// <auto-generated />
using FingerPrintSolution.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FingerPrintSolution.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FingerPrintSolution.Models.FingerPrint", b =>
                {
                    b.Property<int>("FingerPrintId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FingerPrintId"), 1L, 1);

                    b.Property<string>("BMPBase64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ErrorCode")
                        .HasColumnType("int");

                    b.Property<int>("ImageDPI")
                        .HasColumnType("int");

                    b.Property<string>("ImageDataBase64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ImageHeight")
                        .HasColumnType("int");

                    b.Property<int>("ImageNFIQ")
                        .HasColumnType("int");

                    b.Property<int>("ImageQuality")
                        .HasColumnType("int");

                    b.Property<int>("ImageWidth")
                        .HasColumnType("int");

                    b.Property<string>("JSMethodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JSParameter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JavaScriptToRun")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateBase64")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WSQImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WSQImageSize")
                        .HasColumnType("int");

                    b.HasKey("FingerPrintId");

                    b.ToTable("Fingerprints");
                });
#pragma warning restore 612, 618
        }
    }
}
